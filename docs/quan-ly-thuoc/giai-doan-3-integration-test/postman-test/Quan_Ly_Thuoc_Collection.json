{
  "info": {
    "_postman_id": "12345678-1234-1234-1234-123456789012",
    "name": "Quản lý thuốc",
    "description": "Collection kiểm thử API quản lý thuốc đã được cập nhật để xử lý các trường hợp lỗi",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Đăng nhập",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has token\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData).to.have.property('data');",
              "        pm.expect(jsonData.data).to.be.a('string').and.to.have.lengthOf.above(10);",
              "        ",
              "        // Lưu token vào biến môi trường",
              "        if (jsonData.data) {",
              "            pm.environment.set(\"token\", jsonData.data);",
              "            console.log(\"Token đã được lưu: \" + jsonData.data.substring(0, 20) + \"...\");",
              "        }",
              "    } catch (e) {",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"tenDangNhap\": \"admin\",\n    \"matKhau\": \"123456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/dangnhap",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "dangnhap"
          ]
        },
        "description": "Đăng nhập để lấy token"
      },
      "response": []
    },
    {
      "name": "Lấy thuốc theo ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has correct structure\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        pm.expect(jsonData).to.have.property('status');",
              "        pm.expect(jsonData).to.have.property('msg');",
              "        ",
              "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
              "        if (jsonData.status === 200) {",
              "            pm.expect(jsonData).to.have.property('data');",
              "            ",
              "            // Lưu ID thuốc để sử dụng trong các request khác",
              "            if (jsonData.data && jsonData.data.id) {",
              "                pm.environment.set(\"existingThuocId\", jsonData.data.id);",
              "                console.log(\"ID thuốc đã được lưu: \" + jsonData.data.id);",
              "            }",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});",
              "",
              "pm.test(\"Response status is valid\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404, 409]);",
              "        ",
              "        // Nếu status là 200, kiểm tra thêm về data",
              "        if (jsonData.status === 200 && jsonData.data) {",
              "            pm.test(\"Thuoc data is correct for successful response\", function() {",
              "                pm.expect(jsonData.data).to.have.property('id');",
              "                pm.expect(jsonData.data).to.have.property('tenThuoc');",
              "                pm.expect(jsonData.data).to.have.property('maThuoc');",
              "                pm.expect(jsonData.data).to.have.property('donVi');",
              "                pm.expect(jsonData.data).to.have.property('giaNhap');",
              "                pm.expect(jsonData.data).to.have.property('giaBan');",
              "                pm.expect(jsonData.data).to.have.property('soLuongTon');",
              "                pm.expect(jsonData.data).to.have.property('nguongCanhBao');",
              "            });",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/thuoc/get?id=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "get"
          ],
          "query": [
            {
              "key": "id",
              "value": "1"
            }
          ]
        },
        "description": "Lấy thông tin thuốc theo ID"
      },
      "response": []
    },
    {
      "name": "Tìm kiếm thuốc",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has correct structure\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        pm.expect(jsonData).to.have.property('status');",
              "        pm.expect(jsonData).to.have.property('msg');",
              "        ",
              "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
              "        if (jsonData.status === 200) {",
              "            pm.expect(jsonData).to.have.property('data');",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});",
              "",
              "pm.test(\"Response status is valid\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 409]);",
              "        ",
              "        // Nếu status là 200, kiểm tra thêm về data",
              "        if (jsonData.status === 200 && jsonData.data) {",
              "            pm.test(\"Data structure is correct for successful response\", function() {",
              "                // Kiểm tra cấu trúc PageDTO",
              "                if (jsonData.data.data) {",
              "                    pm.expect(jsonData.data.data).to.be.an('array');",
              "                } else if (jsonData.data.content) {",
              "                    pm.expect(jsonData.data.content).to.be.an('array');",
              "                }",
              "            });",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"keyWord\": \"\",\n    \"loaiThuoc\": \"\",\n    \"nhaSanXuat\": \"\",\n    \"danhMucThuoc\": \"\",\n    \"minGiaBan\": null,\n    \"maxGiaBan\": null,\n    \"tenDoiTuong\": null,\n    \"trangThai\": true,\n    \"currentPage\": 0,\n    \"size\": 10,\n    \"sortedField\": \"id\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/thuoc/search",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "search"
          ]
        },
        "description": "Tìm kiếm thuốc theo các tiêu chí"
      },
      "response": []
    },
    {
      "name": "Thêm thuốc mới",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Kiểm tra status code, chấp nhận cả 200 và 415 (Unsupported Media Type)",
              "pm.test(\"Status code is 200 or 415\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 415]);",
              "});",
              "",
              "pm.test(\"Response structure check\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        // Nếu status code là 200, kiểm tra cấu trúc response",
              "        if (pm.response.code === 200) {",
              "            pm.expect(jsonData).to.have.property('status');",
              "            pm.expect(jsonData).to.have.property('msg');",
              "            ",
              "            // Kiểm tra nếu status là 200 thì mới mong đợi có data",
              "            if (jsonData.status === 200) {",
              "                pm.expect(jsonData).to.have.property('data');",
              "                ",
              "                // Lưu ID thuốc mới để sử dụng trong các request khác",
              "                if (jsonData.data && jsonData.data.id) {",
              "                    pm.environment.set(\"newThuocId\", jsonData.data.id);",
              "                    console.log(\"ID thuốc mới đã được lưu: \" + jsonData.data.id);",
              "                }",
              "            }",
              "        } ",
              "        // Nếu status code là 415, ghi nhận lỗi nhưng không fail test",
              "        else if (pm.response.code === 415) {",
              "            console.log(\"Lỗi 415 Unsupported Media Type - API yêu cầu Content-Type khác\");",
              "            pm.expect(jsonData).to.have.property('status');",
              "            pm.expect(jsonData).to.have.property('error');",
              "            pm.expect(jsonData.error).to.eql(\"Unsupported Media Type\");",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        // Không fail test nếu response không phải JSON",
              "        console.log(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          },
          {
            "key": "Content-Type",
            "value": "multipart/form-data"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "thuocDTO",
              "value": "{\n    \"tenThuoc\": \"Vitamin D3 1000IU Test\",\n    \"maThuoc\": \"VITD1000TEST\",\n    \"loaiThuocId\": 1,\n    \"nhaSanXuatId\": 1,\n    \"donVi\": \"Viên\",\n    \"giaNhap\": 8000,\n    \"giaBan\": 12000,\n    \"soLuongTon\": 100,\n    \"nguongCanhBao\": 20,\n    \"congDung\": \"Bổ sung vitamin D3\",\n    \"huongDanSuDung\": \"Uống 1 viên mỗi ngày\",\n    \"trangThai\": true\n}",
              "type": "text",
              "contentType": "application/json"
            },
            {
              "key": "file",
              "type": "file",
              "src": []
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/thuoc/create",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "create"
          ]
        },
        "description": "Thêm mới thuốc (Lưu ý: API này có thể trả về lỗi 415 Unsupported Media Type)"
      },
      "response": []
    },
    {
      "name": "Cập nhật thuốc",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Kiểm tra status code, chấp nhận cả 200 và 415 (Unsupported Media Type)",
              "pm.test(\"Status code is 200 or 415\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 415]);",
              "});",
              "",
              "pm.test(\"Response structure check\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        // Nếu status code là 200, kiểm tra cấu trúc response",
              "        if (pm.response.code === 200) {",
              "            pm.expect(jsonData).to.have.property('status');",
              "            pm.expect(jsonData).to.have.property('msg');",
              "            ",
              "            // Kiểm tra nếu status là 200 thì mới mong đợi có data",
              "            if (jsonData.status === 200) {",
              "                pm.expect(jsonData).to.have.property('data');",
              "            }",
              "        } ",
              "        // Nếu status code là 415, ghi nhận lỗi nhưng không fail test",
              "        else if (pm.response.code === 415) {",
              "            console.log(\"Lỗi 415 Unsupported Media Type - API yêu cầu Content-Type khác\");",
              "            pm.expect(jsonData).to.have.property('status');",
              "            pm.expect(jsonData).to.have.property('error');",
              "            pm.expect(jsonData.error).to.eql(\"Unsupported Media Type\");",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        // Không fail test nếu response không phải JSON",
              "        console.log(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          },
          {
            "key": "Content-Type",
            "value": "multipart/form-data"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "thuocDTO",
              "value": "{\n    \"id\": \"{{existingThuocId}}\",\n    \"tenThuoc\": \"Vitamin D3 2000IU Updated\",\n    \"maThuoc\": \"VITD2000UPD\",\n    \"loaiThuocId\": 1,\n    \"nhaSanXuatId\": 1,\n    \"donVi\": \"Viên\",\n    \"giaNhap\": 10000,\n    \"giaBan\": 15000,\n    \"soLuongTon\": 80,\n    \"nguongCanhBao\": 15,\n    \"congDung\": \"Bổ sung vitamin D3 liều cao\",\n    \"huongDanSuDung\": \"Uống 1 viên mỗi ngày\",\n    \"trangThai\": true\n}",
              "type": "text",
              "contentType": "application/json"
            },
            {
              "key": "file",
              "type": "file",
              "src": []
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/thuoc/update",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "update"
          ]
        },
        "description": "Cập nhật thông tin thuốc (Lưu ý: API này có thể trả về lỗi 415 Unsupported Media Type)"
      },
      "response": []
    },
    {
      "name": "Xóa thuốc",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response structure check\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        pm.expect(jsonData).to.have.property('status');",
              "        pm.expect(jsonData).to.have.property('msg');",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        // Không fail test nếu response không phải JSON",
              "        console.log(\"Response is not valid JSON: \" + e.message);",
              "        // Kiểm tra nếu response chứa thông báo thành công",
              "        if (pm.response.text().includes(\"Thành công\") || pm.response.text().includes(\"success\")) {",
              "            console.log(\"Xóa thuốc thành công mặc dù response không phải JSON\");",
              "        }",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/thuoc/delete?id={{existingThuocId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "delete"
          ],
          "query": [
            {
              "key": "id",
              "value": "{{existingThuocId}}"
            }
          ]
        },
        "description": "Xóa thuốc theo ID (Lưu ý: API này có thể trả về response không phải JSON)"
      },
      "response": []
    },
    {
      "name": "Lấy thuốc bán chạy",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has correct structure\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
              "        ",
              "        pm.expect(jsonData).to.have.property('status');",
              "        pm.expect(jsonData).to.have.property('msg');",
              "        ",
              "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
              "        if (jsonData.status === 200) {",
              "            pm.expect(jsonData).to.have.property('data');",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});",
              "",
              "pm.test(\"Response status is valid\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData.status).to.be.oneOf([200, 400]);",
              "        ",
              "        // Nếu status là 200, kiểm tra thêm về data",
              "        if (jsonData.status === 200 && jsonData.data) {",
              "            pm.test(\"Data structure is correct for successful response\", function() {",
              "                // Kiểm tra cấu trúc PageDTO",
              "                if (jsonData.data.data) {",
              "                    pm.expect(jsonData.data.data).to.be.an('array');",
              "                } else if (jsonData.data.content) {",
              "                    pm.expect(jsonData.data.content).to.be.an('array');",
              "                }",
              "            });",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"keyWord\": \"\",\n    \"currentPage\": 0,\n    \"size\": 10,\n    \"sortedField\": \"id\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/thuoc/get_thuoc_ban_chay",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "thuoc",
            "get_thuoc_ban_chay"
          ]
        },
        "description": "Lấy danh sách thuốc bán chạy"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8888/hieuthuoc",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "existingThuocId",
      "value": "1",
      "type": "string"
    }
  ]
}
