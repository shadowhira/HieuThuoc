{
  "info": {
    "_postman_id": "87654321-4321-4321-4321-210987654321",
    "name": "Loại Thuốc và Danh Mục Thuốc",
    "description": "Collection kiểm thử API quản lý loại thuốc và danh mục thuốc đã được cập nhật để xử lý các trường hợp lỗi",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Đăng nhập",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has token\", function () {",
              "    try {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData).to.have.property('data');",
              "        pm.expect(jsonData.data).to.be.a('string').and.to.have.lengthOf.above(10);",
              "        ",
              "        // Lưu token vào biến môi trường",
              "        if (jsonData.data) {",
              "            pm.environment.set(\"token\", jsonData.data);",
              "            console.log(\"Token đã được lưu: \" + jsonData.data.substring(0, 20) + \"...\");",
              "        }",
              "    } catch (e) {",
              "        console.log(\"Raw response:\", pm.response.text());",
              "        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"tenDangNhap\": \"admin\",\n    \"matKhau\": \"123456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/dangnhap",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "dangnhap"
          ]
        },
        "description": "Đăng nhập để lấy token"
      },
      "response": []
    },
    {
      "name": "Loại Thuốc",
      "item": [
        {
          "name": "Lấy danh sách loại thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
                  "        if (jsonData.status === 200) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "            ",
                  "            // Lưu ID loại thuốc đầu tiên để sử dụng trong các request khác",
                  "            if (jsonData.data && jsonData.data.length > 0) {",
                  "                pm.environment.set(\"existingLoaiThuocId\", jsonData.data[0].id);",
                  "                console.log(\"ID loại thuốc đã được lưu: \" + jsonData.data[0].id);",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404]);",
                  "        ",
                  "        if (jsonData.status === 200 && jsonData.data) {",
                  "            pm.test(\"Data is an array\", function() {",
                  "                pm.expect(jsonData.data).to.be.an('array');",
                  "            });",
                  "            ",
                  "            if (jsonData.data.length > 0) {",
                  "                pm.test(\"Response data contains loai thuoc items\", function() {",
                  "                    pm.expect(jsonData.data[0]).to.have.property('id');",
                  "                    pm.expect(jsonData.data[0]).to.have.property('tenLoai');",
                  "                });",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/loaithuoc/list",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "loaithuoc",
                "list"
              ]
            },
            "description": "Lấy danh sách tất cả loại thuốc"
          },
          "response": []
        },
        {
          "name": "Tìm kiếm loại thuốc theo tên",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
                  "        if (jsonData.status === 200) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404, 409]);",
                  "        ",
                  "        if (jsonData.status === 200 && jsonData.data) {",
                  "            pm.test(\"Data is an array for successful search\", function() {",
                  "                pm.expect(jsonData.data).to.be.an('array');",
                  "                ",
                  "                // Nếu có kết quả, kiểm tra cấu trúc",
                  "                if (jsonData.data.length > 0) {",
                  "                    pm.expect(jsonData.data[0]).to.have.property('id');",
                  "                    pm.expect(jsonData.data[0]).to.have.property('tenLoai');",
                  "                }",
                  "            });",
                  "        } else if (jsonData.status === 409) {",
                  "            pm.test(\"Conflict error message is correct\", function() {",
                  "                pm.expect(jsonData.msg).to.include(\"không tồn tại\");",
                  "            });",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/loaithuoc/search_by_ten_loai?tenLoai=Kháng sinh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "loaithuoc",
                "search_by_ten_loai"
              ],
              "query": [
                {
                  "key": "tenLoai",
                  "value": "Kháng sinh"
                }
              ]
            },
            "description": "Tìm kiếm loại thuốc theo tên"
          },
          "response": []
        },
        {
          "name": "Thêm mới loại thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 hoặc 201 thì mới mong đợi có data",
                  "        if (jsonData.status === 200 || jsonData.status === 201) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "            ",
                  "            // Lưu ID loại thuốc mới để sử dụng trong các request khác",
                  "            if (jsonData.data && jsonData.data.id) {",
                  "                pm.environment.set(\"newLoaiThuocId\", jsonData.data.id);",
                  "                console.log(\"ID loại thuốc mới đã được lưu: \" + jsonData.data.id);",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 201, 400, 409]);",
                  "        ",
                  "        if ((jsonData.status === 200 || jsonData.status === 201) && jsonData.data) {",
                  "            pm.test(\"New loai thuoc data is correct\", function() {",
                  "                pm.expect(jsonData.data).to.have.property('id');",
                  "                pm.expect(jsonData.data).to.have.property('tenLoai');",
                  "                pm.expect(jsonData.data).to.have.property('moTa');",
                  "            });",
                  "        } else if (jsonData.status === 409) {",
                  "            pm.test(\"Conflict error message is correct\", function() {",
                  "                pm.expect(jsonData.msg).to.include(\"đã tồn tại\");",
                  "            });",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tenLoai\": \"Vitamin và khoáng chất Test\",\n    \"moTa\": \"Nhóm vitamin và khoáng chất test\",\n    \"danhMucThuocId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/loaithuoc/create",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "loaithuoc",
                "create"
              ]
            },
            "description": "Thêm mới loại thuốc"
          },
          "response": []
        },
        {
          "name": "Cập nhật loại thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response structure check\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
                  "        if (jsonData.status === 200) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404, 409]);",
                  "        ",
                  "        if (jsonData.status === 200 && jsonData.data) {",
                  "            pm.test(\"Update successful and data is correct\", function() {",
                  "                pm.expect(jsonData.data).to.have.property('id');",
                  "                pm.expect(jsonData.data).to.have.property('tenLoai');",
                  "                pm.expect(jsonData.data).to.have.property('moTa');",
                  "            });",
                  "        } else if (jsonData.status === 409) {",
                  "            pm.test(\"Conflict error message is correct\", function() {",
                  "                pm.expect(jsonData.msg).to.include(\"đã tồn tại\");",
                  "            });",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{existingLoaiThuocId}}\",\n    \"tenLoai\": \"Vitamin và khoáng chất cao cấp\",\n    \"moTa\": \"Nhóm vitamin và khoáng chất cao cấp\",\n    \"danhMucThuocId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/loaithuoc/update",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "loaithuoc",
                "update"
              ]
            },
            "description": "Cập nhật loại thuốc"
          },
          "response": []
        },
        {
          "name": "Xóa loại thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response structure check\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        // Không fail test nếu response không phải JSON",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "        // Kiểm tra nếu response chứa thông báo thành công",
                  "        if (pm.response.text().includes(\"Thành công\") || pm.response.text().includes(\"success\")) {",
                  "            console.log(\"Xóa loại thuốc thành công mặc dù response không phải JSON\");",
                  "        }",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/loaithuoc/delete?id={{existingLoaiThuocId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "loaithuoc",
                "delete"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{existingLoaiThuocId}}"
                }
              ]
            },
            "description": "Xóa loại thuốc theo ID (Lưu ý: API này có thể trả về response không phải JSON)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Danh Mục Thuốc",
      "item": [
        {
          "name": "Lấy danh sách danh mục thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
                  "        if (jsonData.status === 200) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "            ",
                  "            // Lưu ID danh mục thuốc đầu tiên để sử dụng trong các request khác",
                  "            if (jsonData.data && jsonData.data.length > 0) {",
                  "                pm.environment.set(\"existingDanhMucThuocId\", jsonData.data[0].id);",
                  "                console.log(\"ID danh mục thuốc đã được lưu: \" + jsonData.data[0].id);",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404]);",
                  "        ",
                  "        if (jsonData.status === 200 && jsonData.data) {",
                  "            pm.test(\"Data is an array\", function() {",
                  "                pm.expect(jsonData.data).to.be.an('array');",
                  "            });",
                  "            ",
                  "            if (jsonData.data.length > 0) {",
                  "                pm.test(\"Response data contains danh muc thuoc items\", function() {",
                  "                    pm.expect(jsonData.data[0]).to.have.property('id');",
                  "                    pm.expect(jsonData.data[0]).to.have.property('tenDanhMuc');",
                  "                });",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/danhmucthuoc/list",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "danhmucthuoc",
                "list"
              ]
            },
            "description": "Lấy danh sách tất cả danh mục thuốc"
          },
          "response": []
        },
        {
          "name": "Thêm mới danh mục thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct structure\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 hoặc 201 thì mới mong đợi có data",
                  "        if (jsonData.status === 200 || jsonData.status === 201) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "            ",
                  "            // Lưu ID danh mục thuốc mới để sử dụng trong các request khác",
                  "            if (jsonData.data && jsonData.data.id) {",
                  "                pm.environment.set(\"newDanhMucThuocId\", jsonData.data.id);",
                  "                console.log(\"ID danh mục thuốc mới đã được lưu: \" + jsonData.data.id);",
                  "            }",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 201, 400, 409]);",
                  "        ",
                  "        if ((jsonData.status === 200 || jsonData.status === 201) && jsonData.data) {",
                  "            pm.test(\"New danh muc thuoc data is correct\", function() {",
                  "                pm.expect(jsonData.data).to.have.property('id');",
                  "                pm.expect(jsonData.data).to.have.property('tenDanhMuc');",
                  "                pm.expect(jsonData.data).to.have.property('moTa');",
                  "            });",
                  "        } else if (jsonData.status === 409) {",
                  "            pm.test(\"Conflict error message is correct\", function() {",
                  "                pm.expect(jsonData.msg).to.include(\"đã tồn tại\");",
                  "            });",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tenDanhMuc\": \"Thuốc bổ Test\",\n    \"moTa\": \"Các loại thuốc bổ test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/danhmucthuoc/create",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "danhmucthuoc",
                "create"
              ]
            },
            "description": "Thêm mới danh mục thuốc"
          },
          "response": []
        },
        {
          "name": "Cập nhật danh mục thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response structure check\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "        ",
                  "        // Kiểm tra nếu status là 200 thì mới mong đợi có data",
                  "        if (jsonData.status === 200) {",
                  "            pm.expect(jsonData).to.have.property('data');",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response status is valid\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.status).to.be.oneOf([200, 400, 404, 409]);",
                  "        ",
                  "        if (jsonData.status === 200 && jsonData.data) {",
                  "            pm.test(\"Update successful and data is correct\", function() {",
                  "                pm.expect(jsonData.data).to.have.property('id');",
                  "                pm.expect(jsonData.data).to.have.property('tenDanhMuc');",
                  "                pm.expect(jsonData.data).to.have.property('moTa');",
                  "            });",
                  "        } else if (jsonData.status === 409) {",
                  "            pm.test(\"Conflict error message is correct\", function() {",
                  "                pm.expect(jsonData.msg).to.include(\"đã tồn tại\");",
                  "            });",
                  "        }",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{existingDanhMucThuocId}}\",\n    \"tenDanhMuc\": \"Thuốc bổ cao cấp\",\n    \"moTa\": \"Các loại thuốc bổ cao cấp\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/danhmucthuoc/update",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "danhmucthuoc",
                "update"
              ]
            },
            "description": "Cập nhật danh mục thuốc"
          },
          "response": []
        },
        {
          "name": "Xóa danh mục thuốc",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response structure check\", function () {",
                  "    try {",
                  "        var jsonData = pm.response.json();",
                  "        console.log(\"Response:\", JSON.stringify(jsonData, null, 2));",
                  "        ",
                  "        pm.expect(jsonData).to.have.property('status');",
                  "        pm.expect(jsonData).to.have.property('msg');",
                  "    } catch (e) {",
                  "        console.log(\"Raw response:\", pm.response.text());",
                  "        // Không fail test nếu response không phải JSON",
                  "        console.log(\"Response is not valid JSON: \" + e.message);",
                  "        // Kiểm tra nếu response chứa thông báo thành công",
                  "        if (pm.response.text().includes(\"Thành công\") || pm.response.text().includes(\"success\")) {",
                  "            console.log(\"Xóa danh mục thuốc thành công mặc dù response không phải JSON\");",
                  "        }",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/danhmucthuoc/delete?id={{existingDanhMucThuocId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "danhmucthuoc",
                "delete"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{existingDanhMucThuocId}}"
                }
              ]
            },
            "description": "Xóa danh mục thuốc theo ID (Lưu ý: API này có thể trả về response không phải JSON)"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8888/hieuthuoc",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "existingLoaiThuocId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "existingDanhMucThuocId",
      "value": "1",
      "type": "string"
    }
  ]
}
